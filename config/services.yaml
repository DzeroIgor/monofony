parameters:
    locale: 'en'
    email_contact: 'contact@example.com'
    email_name: 'Contact AppName'
    email_sender: 'no-reply@example.com'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $publicDir: '%kernel.project_dir%/public'
            $cacheDir: '%kernel.cache_dir%'
            #$syliusResources: '%sylius.resources%' # for api
            $environment: '%kernel.environment%'

    Sylius\Bundle\ResourceBundle\Controller\StateMachineInterface: '@sylius.resource_controller.state_machine'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Factory,Form,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Context\RequestBasedLocaleContext:
        tags:
            - { name: sylius.context.locale, priority: 16}

    App\Context\AdminUserBasedLocaleContext:
        tags:
            - { name: sylius.context.locale, priority: 64}

    App\Translation\Provider\TranslationLocaleProvider:
        arguments:
            $defaultLocaleCode: '%locale%'

    sylius.translation_locale_provider: '@App\Translation\Provider\TranslationLocaleProvider'

    App\EventSubscriber\BookIndexListener:
        tags:
            - { name: kernel.event_listener, event: 'app.book.index', method: onIndex }

    App\Storage\OrganisationStorage:
        arguments:
            $storage: '@sylius.storage.session'

    App\Context\OrganisationContext:
        public: true

    App\Storage\OrganisationStorageInterface: '@App\Storage\OrganisationStorage'

imports:
    - { resource: services/factory.yaml }
    - { resource: services/form.yaml }
