app_backend_task_index:
    path: /tasks
    methods: [ GET ]
    defaults:
        _controller: app.controller.task::indexAction
        _sylius:
            section: backend
            template: backend/crud/index.html.twig
            grid: app_backend_task
            vars:
                breadcrumb: 'app.ui.projects'
                templates:
                    breadcrumb: backend/task/index/_breadcrumb.html.twig

app_backend_project_task_index:
    path: /organisations/{organisationId}/projects/{projectId}/tasks/
    methods: [ GET ]
    defaults:
        _controller: app.controller.task::indexAction
        _sylius:
            section: backend
            template: backend/crud/index.html.twig
            grid: app_backend_task
            vars:
                subheader: app.ui.manage_your_tasks
                breadcrumb: 'app.ui.projects'
                route:
                    parameters:
                        projectId: $projectId
                        organisationId: $organisationId
                templates:
                    breadcrumb: backend/task/index/_breadcrumb.html.twig

app_backend_project_task_create:
    path: /organisations/{organisationId}/projects/{projectId}/tasks/new
    methods: [ GET, POST ]
    defaults:
        _controller: app.controller.task::createAction
        _sylius:
            section: backend
            template: backend/crud/create.html.twig
            redirect:
                route: app_backend_project_task_index
                parameters:
                    projectId: $projectId
                    organisationId: $organisationId
            index:
                route: app_backend_project_task_index
                parameters:
                    projectId: $projectId
                    organisationId: $organisationId
            vars:
                route:
                    name: app_backend_project_task_create
                    parameters:
                        projectId: $projectId
                        organisationId: $organisationId
                breadcrumb: 'app.ui.projects'
                templates:
                    breadcrumb: backend/task/index/_breadcrumb.html.twig
                    form: backend/task/_form.html.twig
            factory:
                method: createNewWithProject
                arguments:
                    - expr:service('app.repository.project').find($projectId)


app_backend_project_task_update:
    path: /organisations/{organisationId}/projects/{projectId}/tasks/{id}/edit
    methods: [ GET, PUT ]
    defaults:
        _controller: app.controller.task::updateAction
        _sylius:
            section: backend
            template: backend/crud/update.html.twig
            redirect:
                route: app_backend_project_task_index
                parameters:
                    organisationId: $organisationId
                    projectId: $projectId
            vars:
                subheader: app.ui.edit_your_task
                breadcrumb: 'app.ui.projects'
                route:
                    name: app_backend_project_task_update
                    parameters:
                        organisationId: $organisationId
                        projectId: $projectId
                        id: $id
                templates:
                    breadcrumb: backend/task/update/_breadcrumb.html.twig
                    form: backend/task/_form.html.twig

app_backend_project_task_delete:
    path: /organisations/{organisationId}/projects/{projectId}/tasks/{id}
    methods: [ DELETE ]
    defaults:
        _controller: app.controller.task::deleteAction
        _sylius:
            section: backend
            redirect:
                route: app_backend_project_task_index
                parameters:
                    organisationId: $organisationId
            vars:
                route:
                    name: app_backend_project_task_delete
                    parameters:
                        organisationId: $organisationId
                        projectId: $projectId
                        id: $id

# workflow routes start
app_backend_task_transition_create:
    path: /task/{id}/create
    methods: [PUT]
    defaults:
        _controller: app.controller.task::applyStateMachineTransitionAction
        _sylius:
            redirect:
                route: app_backend_task_index
                parameters: { projectId: $projectId }
            state_machine:
                graph: app_task
                transition: create

app_backend_task_transition_ask_for_changes:
    path: /task/{id}/ask_for_changes
    methods: [PUT]
    defaults:
        _controller: app.controller.task::applyStateMachineTransitionAction
        _sylius:
            redirect:
                route: app_backend_task_index
                parameters: { projectId: $projectId }
            state_machine:
                graph: app_task
                transition: ask_for_changes

app_backend_task_transition_submit_changes:
    path: /task/{id}/submit_changes
    methods: [PUT]
    defaults:
        _controller: app.controller.task::applyStateMachineTransitionAction
        _sylius:
            redirect:
                route: app_backend_task_index
                parameters: { projectId: $projectId }
            state_machine:
                graph: app_task
                transition: submit_changes

app_backend_task_transition_approve:
    path: /task/{id}/approve
    methods: [PUT]
    defaults:
        _controller: app.controller.task::applyStateMachineTransitionAction
        _sylius:
            redirect:
                route: app_backend_task_index
                parameters: { projectId: $projectId }
            state_machine:
                graph: app_task
                transition: approve
# workflow routes end